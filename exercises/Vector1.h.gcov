        -:    0:Source:Vector1.h
        -:    0:Graph:Vector1.gcno
        -:    0:Data:Vector1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// ---------
        -:    2:// Vector1.h
        -:    3:// ---------
        -:    4:
        -:    5:#ifndef Vector_h
        -:    6:#define Vector_h
        -:    7:
        -:    8:#include <algorithm>        // copy, fill
        -:    9:#include <cstddef>          // ptrdiff_t, size_t
        -:   10:#include <initializer_list> // initializer_list
        -:   11:
        -:   12:template <typename T>
        -:   13:class my_vector {
        -:   14:    public:
        -:   15:        using value_type      = T;
        -:   16:
        -:   17:        using size_type       = std::size_t;
        -:   18:        using difference_type = std::ptrdiff_t;
        -:   19:
        -:   20:        using       pointer   =       value_type*;
        -:   21:        using const_pointer   = const value_type*;
        -:   22:
        -:   23:        using       reference =       value_type&;
        -:   24:        using const_reference = const value_type&;
        -:   25:
        -:   26:        using       iterator  =       pointer;
        -:   27:        using const_iterator  = const_pointer;
        -:   28:
        -:   29:    private:
        -:   30:        const pointer _b;
        -:   31:        const pointer _e;
        -:   32:
        -:   33:    public:
function _ZN9my_vectorIiEC2EmRKi called 4 returned 100% blocks executed 92%
        4:   34:        explicit my_vector (size_type s = 0, const_reference v = T()) :
        3:   35:                _b ((s == 0) ? nullptr : new T[s]),
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 never executed
        7:   36:                _e ((s == 0) ? nullptr : _b + s) {
branch  0 taken 75% (fallthrough)
branch  1 taken 25%
call    2 returned 100%
branch  3 taken 75% (fallthrough)
branch  4 taken 25%
        4:   37:            std::fill(_b, _e, v);}
call    0 returned 100%
        -:   38:
function _ZN9my_vectorIiEC2ESt16initializer_listIiE called 1 returned 100% blocks executed 83%
        1:   39:        my_vector (std::initializer_list<T> rhs) :
        2:   40:                _b ((rhs.size() == 0) ? nullptr : new T[rhs.size()]),
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
call    4 never executed
        2:   41:                _e ((rhs.size() == 0) ? nullptr : _b + rhs.size()) {
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0%
call    6 returned 100%
        1:   42:            std::copy(rhs.begin(), rhs.end(), _b);}
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
        -:   43:
        -:   44:                   my_vector  (const my_vector&) = default;
        -:   45:        my_vector& operator = (const my_vector&) = default;
        -:   46:
function _ZN9my_vectorIiED2Ev called 5 returned 100% blocks executed 100%
        5:   47:        ~my_vector () {
        5:   48:            delete [] _b;}
branch  0 taken 80% (fallthrough)
branch  1 taken 20%
call    2 returned 100%
        -:   49:
function _ZN9my_vectorIiEixEm called 3 returned 100% blocks executed 100%
        3:   50:        reference operator [] (size_type i) {
        3:   51:            return _b[i];}
        -:   52:
function _ZNK9my_vectorIiEixEm called 1 returned 100% blocks executed 100%
        1:   53:        const_reference operator [] (size_type i) const {
        1:   54:            return (*const_cast<my_vector*>(this))[i];}
call    0 returned 100%
        -:   55:
function _ZN9my_vectorIiE5beginEv called 8 returned 100% blocks executed 100%
        8:   56:        iterator begin () {
        8:   57:            return _b;}
        -:   58:
function _ZNK9my_vectorIiE5beginEv called 4 returned 100% blocks executed 100%
        4:   59:        const_iterator begin () const {
        4:   60:            return const_cast<my_vector*>(this)->begin();}
call    0 returned 100%
        -:   61:
function _ZN9my_vectorIiE3endEv called 7 returned 100% blocks executed 100%
        7:   62:        iterator end () {
        7:   63:            return _e;}
        -:   64:
function _ZNK9my_vectorIiE3endEv called 3 returned 100% blocks executed 100%
        3:   65:        const_iterator end () const {
        3:   66:            return const_cast<my_vector*>(this)->end();}
call    0 returned 100%
        -:   67:
function _ZNK9my_vectorIiE4sizeEv called 4 returned 100% blocks executed 100%
        4:   68:        size_type size () const {
        4:   69:            return _e - _b;}};
        -:   70:
        -:   71:#endif // Vector_h
